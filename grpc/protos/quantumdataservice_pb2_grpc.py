# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities

import protos.api_pb2 as api__pb2
import protos.quantumdataservice_pb2 as quantumdataservice__pb2


class QuantumDataServiceStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.add = channel.unary_unary(
        '/Autodesk.Quantum.DataService.QuantumDataService/add',
        request_serializer=quantumdataservice__pb2.TestRequest.SerializeToString,
        response_deserializer=quantumdataservice__pb2.TestResponse.FromString,
        )
    self.create = channel.unary_unary(
        '/Autodesk.Quantum.DataService.QuantumDataService/create',
        request_serializer=quantumdataservice__pb2.Empty.SerializeToString,
        response_deserializer=quantumdataservice__pb2.DataId.FromString,
        )
    self.write = channel.unary_unary(
        '/Autodesk.Quantum.DataService.QuantumDataService/write',
        request_serializer=quantumdataservice__pb2.WriteRequest.SerializeToString,
        response_deserializer=quantumdataservice__pb2.DataId.FromString,
        )
    self.read = channel.unary_unary(
        '/Autodesk.Quantum.DataService.QuantumDataService/read',
        request_serializer=quantumdataservice__pb2.ReadRequest.SerializeToString,
        response_deserializer=api__pb2.Atom.FromString,
        )
    self.delete = channel.unary_unary(
        '/Autodesk.Quantum.DataService.QuantumDataService/delete',
        request_serializer=quantumdataservice__pb2.ReadRequest.SerializeToString,
        response_deserializer=quantumdataservice__pb2.DataId.FromString,
        )


class QuantumDataServiceServicer(object):

  def add(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def create(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def write(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def read(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def delete(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_QuantumDataServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'add': grpc.unary_unary_rpc_method_handler(
          servicer.add,
          request_deserializer=quantumdataservice__pb2.TestRequest.FromString,
          response_serializer=quantumdataservice__pb2.TestResponse.SerializeToString,
      ),
      'create': grpc.unary_unary_rpc_method_handler(
          servicer.create,
          request_deserializer=quantumdataservice__pb2.Empty.FromString,
          response_serializer=quantumdataservice__pb2.DataId.SerializeToString,
      ),
      'write': grpc.unary_unary_rpc_method_handler(
          servicer.write,
          request_deserializer=quantumdataservice__pb2.WriteRequest.FromString,
          response_serializer=quantumdataservice__pb2.DataId.SerializeToString,
      ),
      'read': grpc.unary_unary_rpc_method_handler(
          servicer.read,
          request_deserializer=quantumdataservice__pb2.ReadRequest.FromString,
          response_serializer=api__pb2.Atom.SerializeToString,
      ),
      'delete': grpc.unary_unary_rpc_method_handler(
          servicer.delete,
          request_deserializer=quantumdataservice__pb2.ReadRequest.FromString,
          response_serializer=quantumdataservice__pb2.DataId.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'Autodesk.Quantum.DataService.QuantumDataService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
